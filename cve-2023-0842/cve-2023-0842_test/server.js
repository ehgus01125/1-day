const express = require('express');
const { parseString } = require('xml2js');
const { execSync } = require('child_process');
const app = express();

app.use(express.static('public'));
app.use(express.text({ type: 'application/xml' }));

// 취약한 객체
const config = {
    role: 'user',
    allowCommand: false // Prototype Pollution으로 오염시킬 속성
};

app.post('/api/parse', (req, res) => {
    const xml = req.body;
    parseString(xml, (err, result) => {
        if (err) {
            return res.status(400).json({ error: '잘못된 XML' });
        }

        console.log('Parsed XML:', JSON.stringify(result, null, 2));

        // Prototype Pollution을 통해 allowCommand가 true가 되면 RCE 가능
        let output = "명령어 실행 권한이 없습니다.";
        if(config.allowCommand && result.__proto__ && result.__proto__.command) {
            try {
                output = execSync(result.__proto__.command[0]).toString();
            } catch(e) {
                output = e.message;
            }
        }

        res.json({
            role: config.role,
            allowCommand: config.allowCommand,
            output: output
        });
    });
});

app.listen(3000, () => console.log('Server running on port 3000'));
